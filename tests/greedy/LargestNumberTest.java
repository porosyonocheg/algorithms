package greedy;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class LargestNumberTest {
    @Test
    public void get() {
        assertEquals("123", new LargestNumber().get(new int[]{123}));
        assertEquals("0", new LargestNumber().get(new int[]{0}));
        assertEquals("10", new LargestNumber().get(new int[]{0, 1}));
        assertEquals("321", new LargestNumber().get(new int[]{1, 2, 3}));
        assertEquals("753219", new LargestNumber().get(new int[]{19, 5, 32, 7}));
        assertEquals("999989289", new LargestNumber().get(new int[]{9, 98, 89, 99, 92}));
        assertEquals("93929082827776727070675555494037292518", new LargestNumber().get(new int[]{5, 70, 72, 93, 55, 90, 40, 29, 49, 37, 67, 92, 82, 82, 5, 77, 76, 70, 18, 25}));
        assertEquals("8989888868818778686485685284837977837837657546986656616155905634714674194139436358332318310298244234196191189175171651615014127124123121105", new LargestNumber().get(new int[]{590, 17, 84, 89, 783, 898, 615, 765, 191, 244, 394, 150, 754, 318, 877, 886, 41, 8, 310, 563, 852, 86, 467, 783, 196, 665, 471, 14, 797, 175, 83, 16, 298, 36, 105, 419, 165, 127, 189, 358, 856, 123, 124, 864, 234, 698, 881, 121, 332, 661}));
        assertEquals("9897939089898888878585848482787877767573737271706968686767666636261605957565553484847464645444444139383737363635353333232323231313130282827272624222212119191716161615151414141413131312111101010", new LargestNumber().get(new int[]{32, 15, 14, 3, 66, 31, 1, 16, 27, 24, 31, 87, 72, 10, 14, 88, 2, 39, 62, 21, 75, 7, 78, 88, 61, 27, 84, 15, 13, 63, 73, 45, 89, 68, 35, 56, 32, 26, 70, 16, 28, 13, 36, 46, 90, 57, 69, 17, 82, 16, 33, 71, 85, 37, 10, 14, 32, 37, 68, 12, 76, 67, 6, 78, 44, 21, 48, 11, 14, 84, 41, 46, 7, 93, 85, 30, 19, 55, 44, 32, 38, 36, 4, 89, 60, 10, 47, 73, 31, 35, 59, 53, 22, 19, 67, 28, 48, 97, 98, 13}));
        assertEquals("97306595362892266991058288818286021985057379588075448672766860843558276156285452277152247147749640637939735935766632667730092825881824319621007218416115033813679412698124863119095", new LargestNumber().get(new int[]{522471, 850573, 562854, 210072, 608435, 357666, 973065, 406379, 888182, 922669, 754486, 727668, 910582, 522771, 119095, 184161, 136794, 12698, 150338, 477496, 243196, 124863, 397359, 300928, 326677, 258818, 953628, 582761, 860219, 795880}));
    }
}
