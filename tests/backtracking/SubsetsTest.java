package backtracking;

import org.junit.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import static org.junit.Assert.*;

public class SubsetsTest {
    @Test
    public void subsetsUniqueNumbers() {
        List<List<Integer>> result = new ArrayList<>();
        result.add(new ArrayList<>());
        result.add(Collections.singletonList(5));
        assertEquals(result, new Subsets(false).getSets(new int[]{5}));
        result.add(Collections.singletonList(1));
        result.add(Arrays.asList(1,5));
        assertTrue(result.containsAll(new Subsets(false).getSets(new int[]{1,5})));
        result.add(Collections.singletonList(3));
        result.add(Arrays.asList(3,5));
        result.add(Arrays.asList(1,3));
        result.add(Arrays.asList(1,3,5));
        assertTrue(result.containsAll(new Subsets(false).getSets(new int[]{1,3,5})));
        result.add(Collections.singletonList(-1));
        result.add(Arrays.asList(-1,3));
        result.add(Arrays.asList(-1,5));
        result.add(Arrays.asList(-1,3,5));
        result.add(Arrays.asList(-1,1));
        result.add(Arrays.asList(-1,1,5));
        result.add(Arrays.asList(-1,1,3));
        result.add(Arrays.asList(-1,1,3,5));
        List<List<Integer>> check = new Subsets(false).getSets(new int[]{5,3,1,-1});
        for (List<Integer> cur : check) Collections.sort(cur);
        assertTrue(result.containsAll(check));
        result.add(Collections.singletonList(11));
        result.add(Arrays.asList(5,11));
        result.add(Arrays.asList(1,11));
        result.add(Arrays.asList(1,5,11));
        result.add(Arrays.asList(-1,11));
        result.add(Arrays.asList(-1,5,11));
        result.add(Arrays.asList(-1,1,11));
        result.add(Arrays.asList(-1,1,5,11));
        result.add(Arrays.asList(3,11));
        result.add(Arrays.asList(3,5,11));
        result.add(Arrays.asList(1,3,11));
        result.add(Arrays.asList(1,3,5,11));
        result.add(Arrays.asList(-1,3,11));
        result.add(Arrays.asList(-1,3,5,11));
        result.add(Arrays.asList(-1,1,3,11));
        result.add(Arrays.asList(-1,1,3,5,11));
        check = new Subsets(false).getSets(new int[]{5,1,-1,3,11});
        for (List<Integer> cur : check) Collections.sort(cur);
        assertTrue(result.containsAll(check));
        result.add(Collections.singletonList(0));
        result.add(Arrays.asList(0,5));
        result.add(Arrays.asList(0,1));
        result.add(Arrays.asList(0,1,5));
        result.add(Arrays.asList(-1,0));
        result.add(Arrays.asList(-1,0,5));
        result.add(Arrays.asList(-1,0,1));
        result.add(Arrays.asList(-1,0,1,5));
        result.add(Arrays.asList(0,3));
        result.add(Arrays.asList(0,3,5));
        result.add(Arrays.asList(0,1,3));
        result.add(Arrays.asList(0,1,3,5));
        result.add(Arrays.asList(-1,0,3));
        result.add(Arrays.asList(-1,0,3,5));
        result.add(Arrays.asList(-1,0,1,3));
        result.add(Arrays.asList(-1,0,1,3,5));
        result.add(Arrays.asList(0,11));
        result.add(Arrays.asList(0,5,11));
        result.add(Arrays.asList(0,1,11));
        result.add(Arrays.asList(0,1,5,11));
        result.add(Arrays.asList(-1,0,11));
        result.add(Arrays.asList(-1,0,5,11));
        result.add(Arrays.asList(-1,0,1,11));
        result.add(Arrays.asList(-1,0,1,5,11));
        result.add(Arrays.asList(0,3,11));
        result.add(Arrays.asList(0,1,3,11));
        result.add(Arrays.asList(0,3,5,11));
        result.add(Arrays.asList(0,1,3,5,11));
        result.add(Arrays.asList(-1,0,3,11));
        result.add(Arrays.asList(-1,0,3,5,11));
        result.add(Arrays.asList(-1,0,1,3,11));
        result.add(Arrays.asList(-1,0,1,3,5,11));
        check = new Subsets(false).getSets(new int[]{0,5,-1,1,11,3});
        for (List<Integer> cur : check) Collections.sort(cur);
        assertTrue(result.containsAll(check));
        check = new Subsets(false).getSets(new int[]{5,1,-1,0,3,11});
        for (List<Integer> cur : check) Collections.sort(cur);
        assertTrue(result.containsAll(check));
    }

    @Test
    public void subsetsWithDuplicates() {
        List<List<Integer>> result = new ArrayList<>();
        result.add(new ArrayList<>());
        result.add(Collections.singletonList(5));
        result.add(Arrays.asList(5,5));
        assertEquals(result, new Subsets().getSets(new int[]{5,5}));
        result.add(Collections.singletonList(1));
        result.add(Arrays.asList(1,1));
        result.add(Arrays.asList(1,5));
        result.add(Arrays.asList(1,1,5));
        result.add(Arrays.asList(1,1,5,5));
        result.add(Arrays.asList(1,5,5));
        assertTrue(result.containsAll(new Subsets().getSets(new int[]{1,1,5,5})));

        result = new ArrayList<>();
        result.add(new ArrayList<>());
        result.add(Collections.singletonList(1));
        result.add(Arrays.asList(1,1));
        result.add(Arrays.asList(1,1,1));
        result.add(Arrays.asList(1,1,1,3));
        result.add(Arrays.asList(1,1,1,3,3));
        result.add(Arrays.asList(1,1,1,3,3,5));
        result.add(Arrays.asList(1,1,1,3,5));
        result.add(Arrays.asList(1,1,1,5));
        result.add(Arrays.asList(1,1,3));
        result.add(Arrays.asList(1,1,3,3));
        result.add(Arrays.asList(1,1,3,3,5));
        result.add(Arrays.asList(1,1,3,5));
        result.add(Arrays.asList(1,1,5));
        result.add(Arrays.asList(1,3));
        result.add(Arrays.asList(1,3,3));
        result.add(Arrays.asList(1,3,3,5));
        result.add(Arrays.asList(1,3,5));
        result.add(Arrays.asList(1,5));
        result.add(Collections.singletonList(3));
        result.add(Arrays.asList(3,3));
        result.add(Arrays.asList(3,3,5));
        result.add(Arrays.asList(3,5));
        result.add(Collections.singletonList(5));
        assertTrue(result.containsAll(new Subsets().getSets(new int[]{1,3,5,1,3,1})));

        result = new ArrayList<>();
        result.add(new ArrayList<>());
        result.add(Collections.singletonList(-1));
        result.add(Arrays.asList(-1, -1));
        result.add(Arrays.asList(-1, -1, 1));
        result.add(Arrays.asList(-1, -1, 1, 1));
        result.add(Arrays.asList(-1, -1, 1, 1, 1));
        result.add(Arrays.asList(-1, -1, 1, 1, 1, 3));
        result.add(Arrays.asList(-1, -1, 1, 1, 1, 3, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 1, 3, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 1, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 1, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 1, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 3));
        result.add(Arrays.asList(-1, -1, 1, 1, 3, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 3, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 1, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 3));
        result.add(Arrays.asList(-1, -1, 1, 3, 5));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 5));
        result.add(Arrays.asList(-1, -1, 1, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 3));
        result.add(Arrays.asList(-1, -1, 3, 5));
        result.add(Arrays.asList(-1, -1, 3, 5, 5));
        result.add(Arrays.asList(-1, -1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 5));
        result.add(Arrays.asList(-1, -1, 5, 5));
        result.add(Arrays.asList(-1, -1, 5, 5, 5));
        result.add(Arrays.asList(-1, 1));
        result.add(Arrays.asList(-1, 1, 1));
        result.add(Arrays.asList(-1, 1, 1, 1));
        result.add(Arrays.asList(-1, 1, 1, 1, 3));
        result.add(Arrays.asList(-1, 1, 1, 1, 3, 5));
        result.add(Arrays.asList(-1, 1, 1, 1, 3, 5, 5));
        result.add(Arrays.asList(-1, 1, 1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, 1, 1, 1, 5));
        result.add(Arrays.asList(-1, 1, 1, 1, 5, 5));
        result.add(Arrays.asList(-1, 1, 1, 1, 5, 5, 5));
        result.add(Arrays.asList(-1, 1, 1, 3));
        result.add(Arrays.asList(-1, 1, 1, 3, 5));
        result.add(Arrays.asList(-1, 1, 1, 3, 5, 5));
        result.add(Arrays.asList(-1, 1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, 1, 1, 5));
        result.add(Arrays.asList(-1, 1, 1, 5, 5));
        result.add(Arrays.asList(-1, 1, 1, 5, 5, 5));
        result.add(Arrays.asList(-1, 1, 3));
        result.add(Arrays.asList(-1, 1, 3, 5));
        result.add(Arrays.asList(-1, 1, 3, 5, 5));
        result.add(Arrays.asList(-1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, 1, 5));
        result.add(Arrays.asList(-1, 1, 5, 5));
        result.add(Arrays.asList(-1, 1, 5, 5, 5));
        result.add(Arrays.asList(-1, 3));
        result.add(Arrays.asList(-1, 3, 5));
        result.add(Arrays.asList(-1, 3, 5, 5));
        result.add(Arrays.asList(-1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, 5));
        result.add(Arrays.asList(-1, 5, 5));
        result.add(Arrays.asList(-1, 5, 5, 5));
        result.add(Collections.singletonList(1));
        result.add(Arrays.asList(1, 1));
        result.add(Arrays.asList(1, 1, 1));
        result.add(Arrays.asList(1, 1, 1, 3));
        result.add(Arrays.asList(1, 1, 1, 3, 5));
        result.add(Arrays.asList(1, 1, 1, 3, 5, 5));
        result.add(Arrays.asList(1, 1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(1, 1, 1, 5));
        result.add(Arrays.asList(1, 1, 1, 5, 5));
        result.add(Arrays.asList(1, 1, 1, 5, 5, 5));
        result.add(Arrays.asList(1, 1, 3));
        result.add(Arrays.asList(1, 1, 3, 5));
        result.add(Arrays.asList(1, 1, 3, 5, 5));
        result.add(Arrays.asList(1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(1, 1, 5));
        result.add(Arrays.asList(1, 1, 5, 5));
        result.add(Arrays.asList(1, 1, 5, 5, 5));
        result.add(Arrays.asList(1, 3));
        result.add(Arrays.asList(1, 3, 5));
        result.add(Arrays.asList(1, 3, 5, 5));
        result.add(Arrays.asList(1, 3, 5, 5, 5));
        result.add(Arrays.asList(1, 5));
        result.add(Arrays.asList(1, 5, 5));
        result.add(Arrays.asList(1, 5, 5, 5));
        result.add(Collections.singletonList(3));
        result.add(Arrays.asList(3, 5));
        result.add(Arrays.asList(3, 5, 5));
        result.add(Arrays.asList(3, 5, 5, 5));
        result.add(Collections.singletonList(5));
        result.add(Arrays.asList(5, 5));
        result.add(Arrays.asList(5, 5, 5));
        assertEquals(result, new Subsets().getSets(new int[]{1,5,3,1,-1,5,-1,1,5}));
        result = new ArrayList<>();
        result.add(new ArrayList<>());
        result.add(Collections.singletonList(-1));
        result.add(Arrays.asList(-1, -1));
        result.add(Arrays.asList(-1, -1, 1));
        result.add(Arrays.asList(-1, -1, 1, 3));
        result.add(Arrays.asList(-1, -1, 1, 3, 5));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5, 5, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 3, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 5));
        result.add(Arrays.asList(-1, -1, 1, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 1, 5, 5, 5, 11));
        result.add(Arrays.asList(-1, -1, 1, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 5, 5, 11));
        result.add(Arrays.asList(-1, -1, 1, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 5, 11));
        result.add(Arrays.asList(-1, -1, 1, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 11));
        result.add(Arrays.asList(-1, -1, 1, 11, 11));
        result.add(Arrays.asList(-1, -1, 1, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 3));
        result.add(Arrays.asList(-1, -1, 3, 5));
        result.add(Arrays.asList(-1, -1, 3, 5, 5));
        result.add(Arrays.asList(-1, -1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 3, 5, 5, 5, 11));
        result.add(Arrays.asList(-1, -1, 3, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 3, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 3, 5, 5, 11));
        result.add(Arrays.asList(-1, -1, 3, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 3, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 3, 5, 11));
        result.add(Arrays.asList(-1, -1, 3, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 3, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 3, 11));
        result.add(Arrays.asList(-1, -1, 3, 11, 11));
        result.add(Arrays.asList(-1, -1, 3, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 5));
        result.add(Arrays.asList(-1, -1, 5, 5));
        result.add(Arrays.asList(-1, -1, 5, 5, 5));
        result.add(Arrays.asList(-1, -1, 5, 5, 5, 11));
        result.add(Arrays.asList(-1, -1, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 5, 5, 11));
        result.add(Arrays.asList(-1, -1, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 5, 11));
        result.add(Arrays.asList(-1, -1, 5, 11, 11));
        result.add(Arrays.asList(-1, -1, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, -1, 11));
        result.add(Arrays.asList(-1, -1, 11, 11));
        result.add(Arrays.asList(-1, -1, 11, 11, 11));
        result.add(Arrays.asList(-1, 1));
        result.add(Arrays.asList(-1, 1, 3));
        result.add(Arrays.asList(-1, 1, 3, 5));
        result.add(Arrays.asList(-1, 1, 3, 5, 5));
        result.add(Arrays.asList(-1, 1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, 1, 3, 5, 5, 5, 11));
        result.add(Arrays.asList(-1, 1, 3, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, 1, 3, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 1, 3, 5, 5, 11));
        result.add(Arrays.asList(-1, 1, 3, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, 1, 3, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 1, 3, 5, 11));
        result.add(Arrays.asList(-1, 1, 3, 5, 11, 11));
        result.add(Arrays.asList(-1, 1, 3, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 1, 3, 11));
        result.add(Arrays.asList(-1, 1, 3, 11, 11));
        result.add(Arrays.asList(-1, 1, 3, 11, 11, 11));
        result.add(Arrays.asList(-1, 1, 5));
        result.add(Arrays.asList(-1, 1, 5, 5));
        result.add(Arrays.asList(-1, 1, 5, 5, 5));
        result.add(Arrays.asList(-1, 1, 5, 5, 5, 11));
        result.add(Arrays.asList(-1, 1, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, 1, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 1, 5, 5, 11));
        result.add(Arrays.asList(-1, 1, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, 1, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 1, 5, 11));
        result.add(Arrays.asList(-1, 1, 5, 11, 11));
        result.add(Arrays.asList(-1, 1, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 1, 11));
        result.add(Arrays.asList(-1, 1, 11, 11));
        result.add(Arrays.asList(-1, 1, 11, 11, 11));
        result.add(Arrays.asList(-1, 3));
        result.add(Arrays.asList(-1, 3, 5));
        result.add(Arrays.asList(-1, 3, 5, 5));
        result.add(Arrays.asList(-1, 3, 5, 5, 5));
        result.add(Arrays.asList(-1, 3, 5, 5, 5, 11));
        result.add(Arrays.asList(-1, 3, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, 3, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 3, 5, 5, 11));
        result.add(Arrays.asList(-1, 3, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, 3, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 3, 5, 11));
        result.add(Arrays.asList(-1, 3, 5, 11, 11));
        result.add(Arrays.asList(-1, 3, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 3, 11));
        result.add(Arrays.asList(-1, 3, 11, 11));
        result.add(Arrays.asList(-1, 3, 11, 11, 11));
        result.add(Arrays.asList(-1, 5));
        result.add(Arrays.asList(-1, 5, 5));
        result.add(Arrays.asList(-1, 5, 5, 5));
        result.add(Arrays.asList(-1, 5, 5, 5, 11));
        result.add(Arrays.asList(-1, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 5, 5, 11));
        result.add(Arrays.asList(-1, 5, 5, 11, 11));
        result.add(Arrays.asList(-1, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 5, 11));
        result.add(Arrays.asList(-1, 5, 11, 11));
        result.add(Arrays.asList(-1, 5, 11, 11, 11));
        result.add(Arrays.asList(-1, 11));
        result.add(Arrays.asList(-1, 11, 11));
        result.add(Arrays.asList(-1, 11, 11, 11));
        result.add(Collections.singletonList(1));
        result.add(Arrays.asList(1, 3));
        result.add(Arrays.asList(1, 3, 5));
        result.add(Arrays.asList(1, 3, 5, 5));
        result.add(Arrays.asList(1, 3, 5, 5, 5));
        result.add(Arrays.asList(1, 3, 5, 5, 5, 11));
        result.add(Arrays.asList(1, 3, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(1, 3, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(1, 3, 5, 5, 11));
        result.add(Arrays.asList(1, 3, 5, 5, 11, 11));
        result.add(Arrays.asList(1, 3, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(1, 3, 5, 11));
        result.add(Arrays.asList(1, 3, 5, 11, 11));
        result.add(Arrays.asList(1, 3, 5, 11, 11, 11));
        result.add(Arrays.asList(1, 3, 11));
        result.add(Arrays.asList(1, 3, 11, 11));
        result.add(Arrays.asList(1, 3, 11, 11, 11));
        result.add(Arrays.asList(1, 5));
        result.add(Arrays.asList(1, 5, 5));
        result.add(Arrays.asList(1, 5, 5, 5));
        result.add(Arrays.asList(1, 5, 5, 5, 11));
        result.add(Arrays.asList(1, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(1, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(1, 5, 5, 11));
        result.add(Arrays.asList(1, 5, 5, 11, 11));
        result.add(Arrays.asList(1, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(1, 5, 11));
        result.add(Arrays.asList(1, 5, 11, 11));
        result.add(Arrays.asList(1, 5, 11, 11, 11));
        result.add(Arrays.asList(1, 11));
        result.add(Arrays.asList(1, 11, 11));
        result.add(Arrays.asList(1, 11, 11, 11));
        result.add(Collections.singletonList(3));
        result.add(Arrays.asList(3, 5));
        result.add(Arrays.asList(3, 5, 5));
        result.add(Arrays.asList(3, 5, 5, 5));
        result.add(Arrays.asList(3, 5, 5, 5, 11));
        result.add(Arrays.asList(3, 5, 5, 5, 11, 11));
        result.add(Arrays.asList(3, 5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(3, 5, 5, 11));
        result.add(Arrays.asList(3, 5, 5, 11, 11));
        result.add(Arrays.asList(3, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(3, 5, 11));
        result.add(Arrays.asList(3, 5, 11, 11));
        result.add(Arrays.asList(3, 5, 11, 11, 11));
        result.add(Arrays.asList(3, 11));
        result.add(Arrays.asList(3, 11, 11));
        result.add(Arrays.asList(3, 11, 11, 11));
        result.add(Collections.singletonList(5));
        result.add(Arrays.asList(5, 5));
        result.add(Arrays.asList(5, 5, 5));
        result.add(Arrays.asList(5, 5, 5, 11));
        result.add(Arrays.asList(5, 5, 5, 11, 11));
        result.add(Arrays.asList(5, 5, 5, 11, 11, 11));
        result.add(Arrays.asList(5, 5, 11));
        result.add(Arrays.asList(5, 5, 11, 11));
        result.add(Arrays.asList(5, 5, 11, 11, 11));
        result.add(Arrays.asList(5, 11));
        result.add(Arrays.asList(5, 11, 11));
        result.add(Arrays.asList(5, 11, 11, 11));
        result.add(Collections.singletonList(11));
        result.add(Arrays.asList(11, 11));
        result.add(Arrays.asList(11, 11, 11));
        assertEquals(result, new Subsets().getSets(new int[]{11,1,5,11,-1,3,5,11,-1,5}));
        result = new ArrayList<>();
        result.add(new ArrayList<>());
        result.add(Collections.singletonList(1));
        result.add(Arrays.asList(1,1));
        result.add(Arrays.asList(1,1,1));
        result.add(Arrays.asList(1,1,1,1));
        result.add(Arrays.asList(1,1,1,1,1));
        result.add(Arrays.asList(1,1,1,1,1,1));
        result.add(Arrays.asList(1,1,1,1,1,1,1));
        result.add(Arrays.asList(1,1,1,1,1,1,1,1));
        result.add(Arrays.asList(1,1,1,1,1,1,1,1,1));
        result.add(Arrays.asList(1,1,1,1,1,1,1,1,1,1));
        result.add(Arrays.asList(1,1,1,1,1,1,1,1,1,1,1));
        assertEquals(result, new Subsets().getSets(new int[]{1,1,1,1,1,1,1,1,1,1,1}));
        result = new ArrayList<>();
        result.add(new ArrayList<>());
        result.add(Collections.singletonList(1));
        result.add(Arrays.asList(1, 1));
        result.add(Arrays.asList(1, 1, 2));
        result.add(Arrays.asList(1, 1, 2, 2));
        result.add(Arrays.asList(1, 1, 2, 2, 2));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 3));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 2, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 3));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 2, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3));
        result.add(Arrays.asList(1, 1, 2, 3, 3));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 3));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 4));
        result.add(Arrays.asList(1, 1, 2, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 2, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3));
        result.add(Arrays.asList(1, 1, 3, 3));
        result.add(Arrays.asList(1, 1, 3, 3, 3));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 3));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 4));
        result.add(Arrays.asList(1, 1, 3, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 4));
        result.add(Arrays.asList(1, 1, 4, 4));
        result.add(Arrays.asList(1, 1, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 1, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2));
        result.add(Arrays.asList(1, 2, 2));
        result.add(Arrays.asList(1, 2, 2, 2));
        result.add(Arrays.asList(1, 2, 2, 2, 3));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 3));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 2, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3));
        result.add(Arrays.asList(1, 2, 2, 3, 3));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 3));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 4));
        result.add(Arrays.asList(1, 2, 2, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 2, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3));
        result.add(Arrays.asList(1, 2, 3, 3));
        result.add(Arrays.asList(1, 2, 3, 3, 3));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 3));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 4));
        result.add(Arrays.asList(1, 2, 3, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 4));
        result.add(Arrays.asList(1, 2, 4, 4));
        result.add(Arrays.asList(1, 2, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 2, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 3));
        result.add(Arrays.asList(1, 3, 3));
        result.add(Arrays.asList(1, 3, 3, 3));
        result.add(Arrays.asList(1, 3, 3, 3, 3));
        result.add(Arrays.asList(1, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 3, 4));
        result.add(Arrays.asList(1, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 4));
        result.add(Arrays.asList(1, 3, 3, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 4));
        result.add(Arrays.asList(1, 3, 4, 4));
        result.add(Arrays.asList(1, 3, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 4));
        result.add(Arrays.asList(1, 4, 4));
        result.add(Arrays.asList(1, 4, 4, 4));
        result.add(Arrays.asList(1, 4, 4, 4, 4));
        result.add(Arrays.asList(1, 4, 4, 4, 4, 4));
        result.add(Collections.singletonList(2));
        result.add(Arrays.asList(2, 2));
        result.add(Arrays.asList(2, 2, 2));
        result.add(Arrays.asList(2, 2, 2, 3));
        result.add(Arrays.asList(2, 2, 2, 3, 3));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 3));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 4));
        result.add(Arrays.asList(2, 2, 2, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 2, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3));
        result.add(Arrays.asList(2, 2, 3, 3));
        result.add(Arrays.asList(2, 2, 3, 3, 3));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 3));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 4));
        result.add(Arrays.asList(2, 2, 3, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 4));
        result.add(Arrays.asList(2, 2, 4, 4));
        result.add(Arrays.asList(2, 2, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 2, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 3));
        result.add(Arrays.asList(2, 3, 3));
        result.add(Arrays.asList(2, 3, 3, 3));
        result.add(Arrays.asList(2, 3, 3, 3, 3));
        result.add(Arrays.asList(2, 3, 3, 3, 3, 4));
        result.add(Arrays.asList(2, 3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 3, 4));
        result.add(Arrays.asList(2, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 4));
        result.add(Arrays.asList(2, 3, 3, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 4));
        result.add(Arrays.asList(2, 3, 4, 4));
        result.add(Arrays.asList(2, 3, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 4));
        result.add(Arrays.asList(2, 4, 4));
        result.add(Arrays.asList(2, 4, 4, 4));
        result.add(Arrays.asList(2, 4, 4, 4, 4));
        result.add(Arrays.asList(2, 4, 4, 4, 4, 4));
        result.add(Collections.singletonList(3));
        result.add(Arrays.asList(3, 3));
        result.add(Arrays.asList(3, 3, 3));
        result.add(Arrays.asList(3, 3, 3, 3));
        result.add(Arrays.asList(3, 3, 3, 3, 4));
        result.add(Arrays.asList(3, 3, 3, 3, 4, 4));
        result.add(Arrays.asList(3, 3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(3, 3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(3, 3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(3, 3, 3, 4));
        result.add(Arrays.asList(3, 3, 3, 4, 4));
        result.add(Arrays.asList(3, 3, 3, 4, 4, 4));
        result.add(Arrays.asList(3, 3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(3, 3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(3, 3, 4));
        result.add(Arrays.asList(3, 3, 4, 4));
        result.add(Arrays.asList(3, 3, 4, 4, 4));
        result.add(Arrays.asList(3, 3, 4, 4, 4, 4));
        result.add(Arrays.asList(3, 3, 4, 4, 4, 4, 4));
        result.add(Arrays.asList(3, 4));
        result.add(Arrays.asList(3, 4, 4));
        result.add(Arrays.asList(3, 4, 4, 4));
        result.add(Arrays.asList(3, 4, 4, 4, 4));
        result.add(Arrays.asList(3, 4, 4, 4, 4, 4));
        result.add(Collections.singletonList(4));
        result.add(Arrays.asList(4, 4));
        result.add(Arrays.asList(4, 4, 4));
        result.add(Arrays.asList(4, 4, 4, 4));
        result.add(Arrays.asList(4, 4, 4, 4, 4));
        assertEquals(result, new Subsets().getSets(new int[]{1,1,2,2,2,3,3,3,3,4,4,4,4,4}));
    }
}
