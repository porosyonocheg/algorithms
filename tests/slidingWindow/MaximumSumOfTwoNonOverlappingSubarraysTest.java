package slidingWindow;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class MaximumSumOfTwoNonOverlappingSubarraysTest {
    @Test
    public void get() {
        assertEquals(3, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{3,2}, 0,1));
        assertEquals(20, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{8,1,2,5,7}, 2,1));
        assertEquals(38, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{6,9,8,15,2,5}, 1,3));
        assertEquals(46, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{9,12,8,13,12,3,15}, 2,2));
        assertEquals(31, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{2,1,5,6,0,9,5,0,3,8}, 4,3));
        assertEquals(319, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{4,6,5,23,1,1,18,2,18,20,3,15,12,26,12,16,11,24,20,15,2,13,6,14,9,3,28,17,14,8,27,11,21,13,16,12,22,7,20,3,22,24,16,11,14,5,30,30,12}, 7,11));
      //  assertEquals(3, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{3,2}, 0,1));
      //  assertEquals(3, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{3,2}, 0,1));
      //  assertEquals(3, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{3,2}, 0,1));
        assertEquals(326265, new MaximumSumOfTwoNonOverlappingSubarrays().get(new int[]{53,956,730,730,550,969,545,184,987,704,618,607,562,39,941,269,193,917,406,915,928,780,287,230,452,628,866,667,54,236,876,27,684,830,191,134,324,814,839,850,744,6,755,698,885,176,864,339,498,609,15,195,392,824,16,594,632,553,511,901,276,580,729,232,820,44,195,533,304,404,337,979,187,305,559,882,469,238,733,573,202,19,288,977,507,805,6,969,438,551,408,897,551,590,153,98,836,271,147,604,741,396,213,695,400,540,991,449,787,210,427,931,468,179,653,197,807,294,254,882,987,482,930,732,948,702,368,58,431,96,657,798,588,660,958,513,297,329,259,419,152,508,942,290,312,707,594,864,825,138,942,200,784,841,76,302,700,124,112,187,747,927,302,510,147,975,173,792,803,440,642,277,426,226,249,460,843,839,531,364,856,281,350,699,32,350,421,178,41,212,610,346,734,152,633,504,966,964,607,439,283,514,559,958,986,641,387,453,759,714,959,7,991,821,22,905,180,806,309,718,291,98,808,576,773,543,433,585,995,283,450,862,225,26,890,84,932,958,824,996,88,904,829,825,387,329,176,161,736,174,298,430,196,564,846,735,540,917,228,522,979,57,871,176,170,516,548,448,550,316,57,302,184,197,180,616,790,411,377,966,318,932,863,574,512,169,788,393,125,40,44,219,110,574,806,658,890,50,302,749,26,39,461,83,968,629,27,248,313,518,447,550,963,664,333,34,843,625,598,972,403,789,416,143,928,218,3,445,823,942,844,577,405,134,396,819,420,766,492,201,460,16,631,700,678,909,95,418,729,422,370,137,647,552,648,991,467,660,309,497,751,726,116,651,805,42,558,272,325,236,187,372,396,491,11,845,253,250,37,425,982,704,802,442,401,893,321,614,659,297,208,795,732,375,875,301,877,642,582,257,265,512,851,113,478,322,174,382,307,666,244,452,272,397,929,214,597,453,51,196,976,939,617,795,277,769,521,207,520,502,893,653,862,945,230,538,23,486,124,256,604,118,945,455,963,584,92,701,920,112,499,667,338,750,920,137,787,414,162,381,840,375,810,674,271,44,215,67,339,626,448,788,601,400,709,61,206,129,175,463,430,392,629,383,257,430,261,594,227,416,939,402,361,954,897,384,925,9,221,222,994,366,733,753,255,235,892,926,269,554,76,8,430,117,219,47,238,664,85,277,64,696,598,906,492,875,569,461,523,515,825,679,340,869,228,714,84,612,333,347,125,169,436,693,580,320,615,882,429,800,924,93,439,464,307,316,233,963,940,221,281,743,647,562,295,656,760,596,465,388,299,121,293,441,620,854,270,400,745,51,518,794,441,445,606,935,731,832,141,734,929,876,418,659,486,995,357,664,900,518,195,129,684,657,922,624,939,210,237,526,374,335,885,397,720,185,606,301,354,662,541,150,610,55,904,554,702,894,887,565,378,869,293,209,452,336,126,636,131,494,430,301,615,51,1,591,803,825,202,949,45,510,986,616,817,572,448,817,851,22,628,327,747,643,61,146,336,118,576,183,88,352,133,663,687,229,77,283,482,981,57,932,887,310,971,232,996,438,749,974,567,280,483,26,299,11,384,208,783,409,333,133,834,479,329,46,925,31,962,235,338,88,169,691,240,215,895,295,304,133,981,968,698,260,536,912,227,154,287,249,151,164,935,149,751,15,322,785,35,427,295,262,35,346,544,19,71,826,270,46,967,116,542,692,688,41,330,722,47,343,744,807,153,254,736,556,58,186,600,773,607,116,903,663,854,926,134,284,515,683,188,679,879,599,43,767,214,234,388,241,255,266,730,450,557,71,492,473,537,191,958,372,874,698,451,914,485,428,15,901,708,996,28,584,456,560,554,582,63,286,991,119,248,607,527,368,130,392,195,188,513,350,866,565,716,101,338,605,72,578,816,48,848,636,420,850,737,6,97,569,274,22,198,932,484,876,283,219,834,486,168,783,78,492,82,367,922,249,855,627,495,190,402,637,522,363,459,21,739,496,387,738,517,447,126,497,903,488,814,223,273,478,391,8,573,597,527,481,702,988,573,612,916,363,804,534,276,317,161,89,56,906,827,462,726,791,467,434,587,94,660,511,391,958,96,413,312,687,398,204,439,257,3,622,567,941,400,28,437,752,182,751,717,441,752,503,988,808,271,981,677,155,392,711,415,840,602,717,560,971,539,587,702,513,487,87,790,214,343,553,181,21,775,907,281,909,919,302,670,324,964,57,538,777,169,803,52,472,400,440,762,231,57,840,505,400,353,992,326,870}, 255,387));
    }
}
