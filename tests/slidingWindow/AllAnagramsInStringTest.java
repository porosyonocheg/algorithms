package slidingWindow;

import org.junit.Test;

import java.util.Arrays;
import java.util.Collections;

import static org.junit.Assert.assertEquals;

public class AllAnagramsInStringTest {
    @Test
    public void findIndexes() {
        assertEquals(Collections.emptyList(), new AllAnagramsInString().findIndexes("b", "a"));
        assertEquals(Collections.singletonList(0), new AllAnagramsInString().findIndexes("a", "a"));
        assertEquals(Collections.singletonList(1), new AllAnagramsInString().findIndexes("ab", "b"));
        assertEquals(Collections.singletonList(0), new AllAnagramsInString().findIndexes("ab", "ba"));
        assertEquals(Arrays.asList(0,1,2), new AllAnagramsInString().findIndexes("abab", "ab"));
        assertEquals(Arrays.asList(1,4,5), new AllAnagramsInString().findIndexes("ccbddcbddbbcc", "cdb"));
        assertEquals(Arrays.asList(25,40,41), new AllAnagramsInString().findIndexes("cbgfgefadaecagfadcgbdabfgaedeecdfdbacgacdeaedbfebb", "eead"));
        assertEquals(Collections.singletonList(0), new AllAnagramsInString().findIndexes("gclajaklcihgdccaabicagdelfkahleiiejgkdcjcdcjaedldgfdlaafbcibgkdkcdkdbbdelhjejkbiilckffkldgliakdffbibklgagbidedc", "lajalckg"));
        assertEquals(Arrays.asList(491,492), new AllAnagramsInString().findIndexes("ddblafegjdbfihekbhldleljifekigabjljfgldaicgdjjabckdhclhdffllaledaicikkfcdelfibalbjcljlfebbbakdkchjflbehbjgjfajligbiehfiaebkgcdahchdiidjcjehffajgedjklhklkkjjkdhejfdbeelcgagckecceelhjdbaceeagadgldgkjlakdgidaiilbkikceblidcijdcddacldafhdfdfdlheedebffklbeadddehjckkighheaejfjecghgfilkdabcalaglhbgegieihehebkjigackhikkjhkdljalifdhelkgblhicifeicjgjhlkcjkgjebhakdiifkehdkbhfchcegfgdcghciejkgdejehikelhcijcjhgfkclliddijhfggbeckiggfhddhlddjklkebgcdeclffdaiaaecakhafbcgcgjcllaelbdggdddkjciibidakfgijjhahlabijkkh", "akjhikbl"));
        assertEquals(Arrays.asList(372, 919), new AllAnagramsInString().findIndexes("ecjjibgjdggjificdbcbbiieihghigjgcchhihahjidhgaebcbbffecjchajejgfhbgegbhfhcdbibhhbicdigggajjdbhiiifddjeicaeddccfigibfabechjeagfihbjdiiegbajfafifeiehiijdcabjdedgccfjjgghfagbibhajgfjbbeifbgheiahdfgfecabdafdhgfgehhchgcijeejhcehejgicdcahcdbdadbahabfjehbgaaidbbgiaaaahaacdiedhdgieddgddeagfggfjbgidfiijbeafhijdbhbaaaiaacccdjcdhedfhfeabiggfjebceedehbegddjefeghejcgjafffceeifbeghbejaajjhjhhjajbdiijagijefgcifbbcicebggfhjbgigfhibajbfgajajaigaefbdfjbdgdiajeicchaifbcahgjgjjggfdiebcegadifadicebhbffiefigifeghicgfecaffhcjfbdbigfbjdiiccegbaafdjbeibjfcdbfgagaabeaeggdahhfeigihdaeihdebdgiaajgiafchjfhdhiigjadieefijdifjjhifidhfajbhghedfhgchfgfddgjhcgfciaiecedbidghddagechfjejaagijceiceaccbicjhjfgibjfadjefehghbadjeedffdegacchegjbheecbdfbficggechfgjffdhcffeeaafeaahbdjihdjiejahehebffijjeigifiiggeihfegfjajahefgjhbjfjeadgieehefgcicjicicgjcdaihaaifccjdgiijefbccbcecahgfefeibccibiaidghggbeigideegjagehaiddahicejiihiiichgihjaaefdabedafbffdgdhjjaaahhjjjjbegaejjcicaaeifijjhcdacgcedjhabjfddhfhbfjicfjdacdcafceibajbjcbhbbhjgjicibeeaabhhccgfcdiaibdcbecccggdahedjgjafccgabffeehidiaffbjcgbjccecfifghdhaijbjfaaffifajhjdhbadbbjbaagjiajghfgdegahfbbcfdefcihidabgjihiecfbdiaajjecieegdhciidbefegdgeajeeccaidciaechigicihiicfbhahiiafdbdbbfcabgihbbgihceifcdgeghbjfcbfiibififcgadaibbdeabigbiehadceeiijigjcchgfjgiiaaifbbbdbdjfghjifgcedgaebdefhdacahcijaeiibaddfgegehaajeaeeeahhafifbiifdaibhjbejcgebeicfhecgbiehfjhahcghiahabhbegjiabhfgbgajfgjgbeabaddbaecbgjebdjgddedfgigfbdgcacafjibcdhgibgijhieecbgdgfdhigdjjjhjfdhdehjdaiibbbheehhgbaegddedgegdc","jajajajhjhjh"));
        assertEquals(Arrays.asList(408,472,574,674,719,1177,1381,1539,1561,1562,1716,2070,2135,2425,2511,2631,2632,2994,3553,3748,3908,3939,4852,4948,4990), new AllAnagramsInString().findIndexes("bcbjbcdfaefaedffcdgaieghcdccggfegdijdfcjfeafegdffiagjiejcfgibfgfffghdajfchbchaghhcjhaijegiiebhdgehdgfiijhhcbiedjjffjgjfchebbdhhbeahjaehigchaeabibfbhaabbhgcgaiijaibhieiadghjfeiafjghfcbhjeccdjdeafijjiabifchegjghhjicajihgaigihfbedgdbfifbcbgicjafhgihcdedaiicdibddajcdbfagfgfdchijbbhehhjhhcgefajdfebdcihbbiebcbgdjcfabifebgefaaijhjbfbbaijhdhdffbcfbgiggbdeficfhgcjchacdiibabeebdfcgjddebdebgedcjfdheejhebaeijhbbbageajbecdhdcfchfgbccfdggeadhcehdbfdfggdahhhffadbjagbbegcejiiahdeggcdebjgjcecgijccjfacedbgidchacgfhegfiaafdbfaaedjfcdgcjjihidhahcjhaibdhecacbdiahihjhebdhjgaiaibjhjifaehhacebjiibcfgijeiebhafhieahihggafjjjbjhfagbaagiaabadceejcbfcejgfeidbgcfeigicfhecgdihaheddchbchffhcaedeafbejfaiiicgiahgeicedjcehcifhahifejfbfdihaecddaebjghecdgghgbjcjcfcegifhabdjaiffeibahdgcehcicihjicbechaccdbgeadegafgaihaidggbiiefdefjdabhhecahhfchcahaeheedgaibifjcgaffjhafjdebgabdcdbajjgahfjjhibjfiedhddccfdgaadfecdhjhebcgjagcdfdcddbhcfihagfchbdfifehfhjeibibbghccbdajadfhaadgccahdhgaddcddfdeahfeajccghcjecgfaaecfihfcagfaeigjficfiadchdcahbchbiaeeeafbdajbgdjabiahhfhgegcedagifcdcahgdjcedijciiedddcgdeihjddbjhjjhhddaggjfjjjdhgfbibffijcefibhbbajgjdhijcceadeegeejaeehcehbjjhdcjdjacfhhggghfhbaagcehaafcdbgecdgbfedebjceeheebbahehdhhadddhdefiadhgjbjhddeaibebiaajdhcgjgicafgdchfbfffifdaajicgbcgjafjjfdefedjeaeaggiahbhcccabggjjeghagbibfegbidfdfhaeicebffeeacahdjgdbhajejjcejeiiidcjegddbdeeefbcjjgfhghbbcgjiifbdhcdhdbaaegheejbdiahjgfdbeedghgegiidbagbecigbfbefeihbabidhceafefidbaecbjifheegffcjfcfeeeeecaehdiifchcffefgdbiaecaeachbfhgjfceeccecaeccidhicccciaadbibdffbghffeagbbeehghabgfebjcecigggijjhhhcbhjbdejbeaeaibefibfjibgigcjdjaidbgjjheaadgiibcjhcjfcihfefjfghfjdcgefficadhdgbeffdebcigaeefggfieafgjjjgahdigeceajggbeeebhciicciggbjighbdaeihfffcgdcbgiabaiddijjbhbjececbafdbihgcghabjhjiiefadffjegfeadjidiajaejihhedfjiijfghdcjaigffadacjedaifjcdadhfchidjbchdjejdhjjefedbidbfeddbjbdefcheedjdfceeeaihcigjhjhghbddedfcccbjfbefhdijachhcghbabgfhbgfbhagjaacacidbafjeaeagffcjgfbicebdhhiahjbadjaaiieididdcejabhcbabciegggjggbbiddddheaegbehbifhiicjifgfjchdbeihcfjaecbjcajgchejagffjcjajbffhchdigijabdhcdehgjhjbjjeajibiiehhdeiebggfgjbefhafhfdhcceebijeecbjdicjddegbbjafeaiddbhddjjbbdhbcjdgeihfaddbijebdffbeefdihagfbjfjhiaiegbabfdajicebeghcghgjcbegdjedibfchjjbcjiicbehejdceejjiggcfcdeahjacegcadbhigbaafaiebbdjdacfcghedhehaheafjbajgdbeghdhhaedfaejhaedebfjjfdbfecgbgcjdgighiejidcfhjeciagcaiibicjjgiejcijdgcchacgcieggidagiebgccahbcbihigbiefgageedhhghdhfhihcabbabigfhgiegcgdehdecbfbfeddijgijiajbeehijbheijieacdabcddaghehihadjjfjdjbhcicgbedeeagiibggedcbebiifdiahbjafacdigbifigfjhdejbfbhcgfchajbhfdjfabbjheabajcgeajacfijbdidbdbdefjacidhcidbgcbaadijjeeadfjiaghdieggiafdaaebcaihjhbafgdjefdcjhidbdjdhaihgbejbabecebbfbbdfbjjcicaijfiaahbdgddahbchgjeeffaicddhcdcaigbiceicddefhiahibfeaaghbghjifbfcjfidbfgjiceeiidfcfahjgbeegiehjeccbefhbgieffjihcebffhcbbgahfidhfhcghdcegjgdhjfdicbigjgbdejhhiicgaighigecjihejjeegbibdjhdieegdfijhjecgchbibcfifdhfcebdafibjfbajcbfehhichaadbgbacabagchbdbbijdcaiedhfjhgbadcijcefgdajbgbchjfhghcgeecjiaegajidfgjjgibeffgjiaehfeigefaebbgdbcdajaehbcaabjejafhhgfbdagahihjgfbhbeebhdhacabbibgiibfhggdcafiaibidcigfhcdccbafiadgcgcifdbecjejecgbfaiefdfaebfbbehiffbdbjhifbfichafhaffeigcefacfdajiihhchbbcgcfejdifchjgfbgeajdbhbfahecebgabjgfadiceafahhedjiicchdbbajhiccdejddddfabddgeaigdiijibfbhgajcjaegadajabgejfibaifjehgihbgiecjfjdgdfjegghejdhgfbdehabjiebbjcibeacabheeejahbfbjifgiaeabedceibiacdfhdjdgchggcieafeacchdbbheicddiidbjaagiedcfehaeehfedeceacjibcfghhefgdhjidejhbeighgddgbjfbhhbbfcjhcbcaeaidajfifaadgcjaaccjeehedeadbgeafgdfffgfhiaidjbahcdddcgaibaijbjidggifabfjigdchddeabcfhajchieijjgbaajhgddhidfjehbjghafiijfbbcajjbeaajaeegefigbijhehidjhgcafhbfadedjbacajifceaafdcbbdjhdabcjefdiedacfcagbbgfebcfihihiejdeefgaafcfhihdagbjhdjgafageabjbbcihcifjbadiajiicbeeeeghcaigddgdjdfjcfbjhajgicfabbgbgbhbdggbceffdacdefecheaghebjfiafddcahhjechegjicegajbfeibeahecifccbhchffdgdfhaachijecbgdacefdcdegigdedbehjgccahgadhadbiejehgfcdcdchdhicagcahjjgifebfbdfiegbhifbgddaegfejahfjbbehihhcejafefejbhhdbchffggbbdeahbfiehgbfaajdbejhfidffcgdadibjheccjcbcbjcehghajjcajiabjjihfdjcdbdhhiceacajaegccfichibchfcecedfhdbacdfgjacedhedheijgifdfiafcfagfiebchgggbdgbbcciehchcefeeieaahbgcbgeefddchhaaiihficihegfiagiddfdfgdbaigfbfjccgjaahfjfgggbijcjgiejejehecdgjibjhfchebhajdhehjffjbgbgcageccidchcajgcjffccbiaghcgfaaagbeiabjjdjcbjgdegffhdedfbhhhfaebidjccgbheeiiagffibhjcjccbbifhbhaibcjfdghcjhhdddbcbbbjcijgagaeeididahbdbhjbfbabbhdhbicaiggecaeaeabfejajcbihhahgeccfajejajejaccfffjggcfgdhdcfhhbegddbccbbgfccaadbgfghbhfjjdcjabaafjjcjcabihdcgidagjhghfahcahjdcgfegficbjggjejcdbjjhceidifaeicjbfjhhgdihicfifgdgajiiifhdhefeiifbjhifejijajgjbghbgccjddibchifceedieaggeeheihidibagddbfdgeejididjegcgaidbaahgihfhafeieacgejgfeacgceadciicdffafcifidhggbjfaebacdcjjaebaajcfdhdcdbjcfacgjcfhjgegfbcibddgaeaffjijefjjchfdccdbhbbfbhedfgcgfgafggdhjibeigfhjjicdcfgeggjhgeicefgiefcgjddhaaddhejaahjffiacjjdjhjbdgcidjdcjehfcgdhjhhgdifcigjjaafjdiefcchjaaeadehaedgghcjghfiibdjdddgdgjcdjjebdajbgabajcegggjegbjhachjefaajiehjfcacgefhcijbcedeaghcijiejgbjcfieidaddehjgefbiefgbabgahfdfjdbebjddgajcjghfdfaebibbfjahgfhhjfjcbhaibdicibejdeeebgd", "bje"));
    }
}
