package greedy;

/** Элемент массива height[i] представляет собой высоту перегородки от горизонтальной оси на позиции i горизонтальной
 * оси. Две перегородки вместе с горизонтальной плоскостью образуют некую ёмкость, которая может быть заполнена до краёв
 * водой.
 * @author Сергей Шершавин*/

public class ContainerWithMostWater {

    /**@return максимальную вместимость среди всех контейнеров*/
    public int maxArea(int[] height) {
        int area = 0;
        for (int i = 0, j = height.length-1; i < j;) {
            int currentArea = (j-i)*Math.min(height[i], height[j]); //текущая ёмкость (площадь, ибо третье измерение не учитывается) равна расстоянию между планками помноженную на минимальную из их высот
            if (currentArea > area) area = currentArea;
            if (height[i] > height[j]) { // всегда оставляем перегородку с максимальной высотой, а смещаемся с меньшей.
                j--;
            }
            else i++;
        }
        return area;
    }
}
